import { cookies } from 'next/headers';
import { notFound } from 'next/navigation';

import CursoForm from './cursoForm';
import Encargados from './encargados';
import Coordinaciones from './coordinaciones';

import { getCurso, GetCursoType } from '@utils/cursos/getCurso';
import { getCoordinaciones, GetCoordinacionesType } from '@utils/coordinaciones/getCoordinaciones';
import { getCatalogoCoordinaciones, GetCatalogoCoordinacionesType } from '@/utils/coordinaciones/getCatalogoCoordinaciones';
import { getEncargados, GetEncargadosType } from '@utils/encargados/getEncargados';
import { getCatalogoMaestros, GetCatalogoMaestrosType } from '@utils/maestros/getCatalogoMaestros';

import { parseId } from '@utils/parseId';
import { RolType } from '@/models/rol';

const General = async ({ params }: { params: { id_curso: string } }) => {

    const idCurso = parseId(params.id_curso);
    if(!idCurso){
        return notFound();
    }

    const cookieStore = cookies();
    const token = cookieStore.get('authToken')?.value || '';


    const [
        responseGetCurso,
        //responseGetCoordinaciones,
        responseGetCatalogoCoordinaciones,
        responseGetEncargados,
        responseGetCatalogoMaestros,
    ]:[
        GetCursoType,
        //GetCoordinacionesType,
        GetCatalogoCoordinacionesType,
        GetEncargadosType,
        GetCatalogoMaestrosType,
    ] = await Promise.all([
        getCurso(idCurso, token),
        //getCoordinaciones(idCurso, token),
        getCatalogoCoordinaciones(token),
        getEncargados(idCurso, token),
        getCatalogoMaestros(token),
    ]);

    const responseGetCoordinaciones: GetCoordinacionesType = {
        success:true,
        message:'all good',
        coordinaciones:[
            {id: 1, id_curso:idCurso, id_coordinacion:1},
            {id: 2, id_curso:idCurso, id_coordinacion:2},
            {id: 3, id_curso:idCurso, id_coordinacion:3},
            {id: 4, id_curso:idCurso, id_coordinacion:4},
        ],
    };


    if (!responseGetCurso.success || !responseGetCoordinaciones.success ||
        !responseGetCatalogoCoordinaciones.success || !responseGetCatalogoMaestros.success ||
        !responseGetCurso.curso){
        console.log('esto pasa');
        console.log('Aqui:',responseGetCoordinaciones);
        notFound();
    }

    const catalogoRoles: RolType[] = [
        {id:1, rol:'Titular'},
        {id:2, rol:'Docente'},
        {id:3, rol:'Admin'},
        {id:4, rol:'Colaborador'},

    ];
    return (
        <section className='flex flex-col h-full p-2'>
            <CursoForm
                className='p-2 border border-light rounded'
                curso={responseGetCurso.curso}
                token={token}
                isLoading={false}
            />
            <div className='flex h-full'>
            <Coordinaciones
                idCurso={idCurso}
                coordinaciones={responseGetCoordinaciones.coordinaciones}
                catalogo_coordinaciones={responseGetCatalogoCoordinaciones.catalogo_coordinaciones}
                token={token}
                className='p-2 w-1/2 h-full border border-light rounded mt-2 mr-1'
            />
            <Encargados
                idCurso={idCurso}
                encargados={responseGetEncargados.encargados}
                catalogoMaestros={responseGetCatalogoMaestros.catalogo_maestros}
                catalogoRoles={catalogoRoles}
                className='p-2 w-1/2 h-full border border-light rounded mt-2 ml-1'
                token={token}
            />
            </div>
        </section>
    );
};

export default General;
